#!/usr/bin/env ruby

require 'pathname'
root = Pathname.new(__FILE__).realpath.parent.parent
$:.unshift root.join('lib') if $0 == __FILE__

require 'optparse'
require "date"
require 'medreg'
require 'medreg/version'

def help
  <<EOS
#$0 ver.#{Medreg::VERSION}
Usage:
  #{File.basename(__FILE__)} [persons | companies]
    Create yaml and csv files under data for all companies/persons known to the
    swiss health authorities. If no parameter given, fetches companies and persons.
EOS
end

parser = OptionParser.new
opts = {}
parser.on('--swiss_only') {|v| opts[:swiss_only] = true }
parser.on_tail('-h', '--help') { puts help; exit }

args = ARGV.dup
begin
  parser.parse!(args)
rescue OptionParser::MissingArgument,
       OptionParser::InvalidArgument,
       OptionParser::InvalidOption
  puts help
  exit 1
end

begin
  Medreg::run(args[0])
rescue Interrupt
  puts "Unterbrochen. Breche mit Fehler ab"
  exit 1
end

puts "#{__FILE__} completed successfully" if $VERBOSE
